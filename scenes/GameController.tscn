[gd_scene load_steps=20 format=1]

[ext_resource path="res://levels/chap1/Chap1.tscn" type="PackedScene" id=1]
[ext_resource path="res://scenes/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://assets/fonts/font_examine.fnt" type="BitmapFont" id=3]
[ext_resource path="res://scenes/GUI.tscn" type="PackedScene" id=4]
[ext_resource path="res://assets/fonts/computer_font.fnt" type="BitmapFont" id=5]
[ext_resource path="res://scenes/Doorunlock.tscn" type="PackedScene" id=6]
[ext_resource path="res://scenes/DoorunlockDC.tscn" type="PackedScene" id=7]
[ext_resource path="res://assets/music/scene1.wav" type="Sample" id=8]
[ext_resource path="res://assets/music/scene2.wav" type="Sample" id=9]
[ext_resource path="res://assets/music/scene3.wav" type="Sample" id=10]
[ext_resource path="res://assets/music/scene4.wav" type="Sample" id=11]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

var points = null

func draw_points(points):
	self.points = points
	update() # updates the state of this node, _draw() gets called

func _draw():
	if points != null:
		for i in range(0, points.size()): # loop over the points
			draw_circle(points[i], 10.0, Color(i*0.1+0.3, 0, 0)) # draw circle
			if i > 0:
				draw_line(points[i-1], points[i], Color(i*0.1, 0, 0)) # draw lines"

[sub_resource type="GDScript" id=2]

script/source = "extends ColorFrame

func _ready():
	get_node(\"AnimationPlayer\").play(\"fadeOut\")
	get_node(\"../Player\").set_process_input(false)
	get_node(\"../GUI\").set_process_input(false)

func _on_AnimationPlayer_finished():
	get_node(\"../Player\").set_process_input(true)
	get_node(\"../GUI\").set_process_input(true)
	hide()"

[sub_resource type="Animation" id=3]

length = 5.0
loop = false
step = 1.5
tracks/0/type = "value"
tracks/0/path = NodePath(".:color")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0, 3, 5 ),
"transitions": FloatArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Label:custom_colors/font_color")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0, 3, 5 ),
"transitions": FloatArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 0 ) ]
}

[sub_resource type="GDScript" id=4]

script/source = "extends Timer

export(NodePath) var ui_path
var ui

func _ready():
	if ui_path:
		ui = get_node(ui_path)
	self.connect(\"timeout\",self,\"tolvl2\")

func change_level(next_level_path):

    var level_container = get_tree().get_root().get_node(\"GameController/Chap1\")

    for i in range(level_container.get_child_count()):
        var child = level_container.get_child(i)
        child.queue_free()

    var next_level_res = load(next_level_path)
    var next_level = next_level_res.instance()
    get_tree().get_root().get_node(\"GameController\").add_child(next_level)

func tolvl2():
	var player = get_node(\"../Player\")
	change_level(\"res://levels/chap2/Chap2.tscn\")
	player.current_level = get_node(\"../Chap2\")
	player.nav_2d = player.current_level.get_node(\"Navigation2D\")
	player.set_process_input(true)
	player.update_scale()
	player.hotspot_target = null
	get_node(\"../Chap2/Hotspots\").show()
	print(\"jeuchangement scène\")
	
func open_ui(node = \"\", function = \"\"):
	if ui:
		if not ui.get(\"termnode\") == null:
			ui.termnode = node
			ui.termfunction = function
		ui.show()
"

[sub_resource type="GDScript" id=5]

script/source = "extends Timer

export(NodePath) var ui_path
var ui

func _ready():
	if ui_path:
		ui = get_node(ui_path)
	self.connect(\"timeout\",self,\"tolvl2\")

func change_level(next_level_path):

    var level_container = get_tree().get_root().get_node(\"GameController/Chap3\")

    for i in range(level_container.get_child_count()):
        var child = level_container.get_child(i)
        child.queue_free()

    var next_level_res = load(next_level_path)
    var next_level = next_level_res.instance()
    get_tree().get_root().get_node(\"GameController\").add_child(next_level)

func tolvl2():
	print(\"enter tout bientot 3\")
	var player = get_node(\"../Player\")
	change_level(\"res://levels/chap4/Chap4.tscn\")
	player.current_level = get_node(\"../Chap4\")
	player.nav_2d = player.current_level.get_node(\"Navigation2D\")
	player.set_process_input(true)
	player.update_scale()
	get_node(\"../Chap4/Hotspots\").show()
	print(\"jeuchangement scène\")
	
func open_ui(node = \"\", function = \"\"):
	if ui:
		if not ui.get(\"termnode\") == null:
			ui.termnode = node
			ui.termfunction = function
		ui.show()
"

[sub_resource type="GDScript" id=6]

script/source = "extends Timer


func _ready():
	self.connect(\"timeout\",self,\"testing\")

func change_level(next_level_path):

    var level_container = get_tree().get_root().get_node(\"GameController/Chap2\")

    for i in range(level_container.get_child_count()):
        var child = level_container.get_child(i)
        child.queue_free()

    var next_level_res = load(next_level_path)
    var next_level = next_level_res.instance()
    get_tree().get_root().get_node(\"GameController\").add_child(next_level)

func testing():
	var player = get_node(\"../Player\")
	change_level(\"res://levels/chap3/Chap3.tscn\")
	player.current_level = get_node(\"../Chap3\")
	player.nav_2d = player.current_level.get_node(\"Navigation2D\")
	player.set_process_input(true)
	player.update_scale()
	player.hotspot_target = null
	get_node(\"../Chap2/Hotspots\").show()
	print(\"jeuchangement scène\")"

[sub_resource type="GDScript" id=7]

script/source = "extends Timer


func _ready():
	self.connect(\"timeout\",self,\"testing\")

func change_level(next_level_path):

    var level_container = get_tree().get_root().get_node(\"GameController/Chap3\")

    for i in range(level_container.get_child_count()):
        var child = level_container.get_child(i)
        child.queue_free()

    var next_level_res = load(next_level_path)
    var next_level = next_level_res.instance()
    get_tree().get_root().get_node(\"GameController\").add_child(next_level)

func testing():
	var player = get_node(\"../Player\")
	change_level(\"res://levels/chap4/Chap4.tscn\")
	player.current_level = get_node(\"../Chap4\")
	player.nav_2d = player.current_level.get_node(\"Navigation2D\")
	player.update_scale()"

[sub_resource type="SampleLibrary" id=8]

samples/scene1 = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 8 )
}
samples/scene2 = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 9 )
}
samples/scene3 = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 10 )
}
samples/scene4 = {
"db": 0.0,
"pitch": 1.0,
"priority": 0,
"sample": ExtResource( 11 )
}

[node name="GameController" type="Node2D"]

[node name="Chap1" parent="." instance=ExtResource( 1 )]

min_scale = 1.0
max_scale = 1.5

[node name="DebugNode" type="Node2D" parent="."]

script/script = SubResource( 1 )

[node name="Player" parent="." instance=ExtResource( 2 )]

transform/pos = Vector2( 455.493, 990.906 )
terrain_path = NodePath("../Chap1")
debug_path = NodePath("../DebugNode")

[node name="Label" type="Label" parent="."]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 836.0
margin/top = 1003.0
margin/right = 1095.0
margin/bottom = 1063.0
custom_fonts/font = ExtResource( 3 )
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="GUI" parent="." instance=ExtResource( 4 )]

[node name="ColorFrame" type="ColorFrame" parent="."]

editor/display_folded = true
focus/ignore_mouse = false
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 2
margin/left = -3.0
margin/top = 0.0
margin/right = 1919.0
margin/bottom = 1086.0
color = Color( 0, 0, 0, 0 )
script/script = SubResource( 2 )

[node name="Label" type="Label" parent="ColorFrame"]

focus/ignore_mouse = true
focus/stop_mouse = true
size_flags/horizontal = 2
size_flags/vertical = 0
margin/left = 110.0
margin/top = 501.0
margin/right = 1838.0
margin/bottom = 796.0
custom_fonts/font = ExtResource( 5 )
custom_colors/font_color = Color( 0, 0, 0, 0 )
text = "Chapitre 1: Et si je paie d'avance?"
percent_visible = 1.0
lines_skipped = 0
max_lines_visible = -1

[node name="AnimationPlayer" type="AnimationPlayer" parent="ColorFrame"]

playback/process_mode = 1
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/fadeOut = SubResource( 3 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = ""

[node name="Timertobientot2" type="Timer" parent="."]

process_mode = 1
wait_time = 6.0
one_shot = true
autostart = false
script/script = SubResource( 4 )
ui_path = NodePath("../DoorunlockRM")

[node name="Timertobientot3" type="Timer" parent="."]

process_mode = 1
wait_time = 6.0
one_shot = true
autostart = false
script/script = SubResource( 5 )
ui_path = NodePath("../DoorunlockDC")

[node name="Timerto3" type="Timer" parent="."]

process_mode = 1
wait_time = 10.0
one_shot = true
autostart = false
script/script = SubResource( 6 )

[node name="Timerto4" type="Timer" parent="."]

process_mode = 1
wait_time = 65.0
one_shot = true
autostart = false
script/script = SubResource( 7 )

[node name="DoorunlockRM" parent="." instance=ExtResource( 6 )]

visibility/visible = false
z/z = 1050

[node name="DoorunlockDC" parent="." instance=ExtResource( 7 )]

visibility/visible = false

[node name="SamplePlayer" type="SamplePlayer" parent="."]

config/polyphony = 1
config/samples = SubResource( 8 )
default/volume_db = 0.0
default/pitch_scale = 1.0
default/pan = 0.0
default/depth = 0.0
default/height = 0.0
default/filter/type = 0
default/filter/cutoff = 5000.0
default/filter/resonance = 1.0
default/filter/gain = 1.0
default/reverb_room = 2
default/reverb_send = 0.0
default/chorus_send = 0.0

[connection signal="finished" from="ColorFrame/AnimationPlayer" to="ColorFrame" method="_on_AnimationPlayer_finished"]


