[gd_scene load_steps=10 format=1]

[ext_resource path="res://assets/Player/Player_walking_RL.png" type="Texture" id=1]
[ext_resource path="res://assets/Player/Player_idle_anim.png" type="Texture" id=2]
[ext_resource path="res://assets/Player/Player_walking_LR.png" type="Texture" id=3]
[ext_resource path="res://assets/Fumee.png" type="Texture" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends Node2D

export(NodePath) var terrain_path
export(NodePath) var debug_path

onready var gui = get_node(\"../GUI\")
onready var animationPlayer = get_node(\"KinematicBody2D/AnimationPlayer\")

var debug_node
var debug = false
var current_level
var path
var nav_2d
var speed = 450
var hotspot_target
var take_target = false
var borne = false

func _ready():
	debug_node = get_node(debug_path)
	current_level = get_node(terrain_path)
	nav_2d = current_level.get_node(\"Navigation2D\")
	update_scale()
	update_z()
	set_process_input(true)
	set_fixed_process(true)
	pass
	
func _fixed_process(delta):
	var anim = \"stand\";
	var effective_speed = speed * delta
	if (path != null):
		if (path.size() > 1):
			var source = get_global_pos()
			var target = path[1]
			var direction = Vector2(target - source)
			var new_pos = direction.normalized()*effective_speed
			if (source.distance_to(target) < effective_speed):
				path.remove(0)
				new_pos = direction
			if (new_pos.x < 0):
				anim = \"walkL\"
			if (new_pos.x > 0):
				anim = \"walkR\"
			translate(new_pos)
			update_scale()
		else:
			path = null
			if (hotspot_target != null):
				if (not take_target):
					hotspot_target.play_dialogue(0, hotspot_target.data.examine);
				else:
					if (hotspot_target.can_take):
						if (not hotspot_target.take_used):
							hotspot_target.play_dialogue(0, hotspot_target.data.take);
							for item in hotspot_target.data.contains:
								take_item(item)
						else:
							hotspot_target.play_dialogue(0, hotspot_target.data.take_used);
						hotspot_target.take_used = true
	if (not animationPlayer.get_current_animation() == anim):
		animationPlayer.play(anim)
	update_z()

func take_item(item):
	gui.get_node(\"Inventory/Items/\"+item).possess()

func _input(event):
	if borne:
		borne = false
		return
	if (event.type==InputEvent.MOUSE_BUTTON and event.pressed and (event.button_index==BUTTON_LEFT or event.button_index==BUTTON_RIGHT)):
		if (not gui.is_mouse_on_gui):
			go_to(event.global_pos, null, false)
			if (debug):
				print(path)
				debug_node.draw_points(path)

func go_to(point, hotspot, to_take):
	path = nav_2d.get_simple_path(get_global_pos(), point)
	path = Array(path)
	if (hotspot_target != null):
		hotspot_target.cut_dialogue()
	if hotspot:
		hotspot_target = get_node(hotspot)
		borne = true
	else:
		hotspot_target = null
	take_target = to_take

func update_z():
	set_z(get_global_pos().y)

func update_scale():
	#var z = (1 - get_global_pos().y / Globals.get(\"display/height\")) * 100
	var z = 1 - get_global_pos().y / Globals.get(\"display/height\")
	var minS = current_level.min_scale
	var maxS = current_level.max_scale
	#var z_ratio = (1+(log(z)/log(10)))/3
	#var scale_ratio = maxS - z_ratio*(maxS-minS)
	var scale_ratio = minS + z*(maxS-minS)
	set_scale(Vector2(maxS,maxS).linear_interpolate(Vector2(minS,minS), z))
	#print(z_ratio)"

[sub_resource type="Animation" id=2]

resource/name = "stand"
length = 8.0
loop = true
step = 0.5
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 2 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:flip_h")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:flip_v")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:vframes")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:hframes")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite:frame")
tracks/5/interp = 1
tracks/5/imported = false
tracks/5/keys = {
"times": FloatArray( 0, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Particles2D:config/emitting")
tracks/6/interp = 1
tracks/6/imported = false
tracks/6/keys = {
"times": FloatArray( 3.5, 4, 4.5, 5.5, 7.5, 8 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ false, false, true, false, true, false ]
}

[sub_resource type="Animation" id=3]

length = 0.91
loop = true
step = 0.13
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:flip_h")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ true ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:flip_v")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:vframes")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:hframes")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("Sprite:frame")
tracks/5/interp = 1
tracks/5/imported = false
tracks/5/keys = {
"times": FloatArray( 0, 0.13, 0.26, 0.39, 0.52, 0.65, 0.78, 0.91 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 0 ]
}
tracks/6/type = "value"
tracks/6/path = NodePath("../Particles2D:config/emitting")
tracks/6/interp = 1
tracks/6/imported = false
tracks/6/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="Animation" id=4]

length = 0.91
loop = true
step = 0.13
tracks/0/type = "value"
tracks/0/path = NodePath("Sprite:texture")
tracks/0/interp = 1
tracks/0/imported = false
tracks/0/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ ExtResource( 3 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Sprite:flip_h")
tracks/1/interp = 1
tracks/1/imported = false
tracks/1/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Sprite:vframes")
tracks/2/interp = 1
tracks/2/imported = false
tracks/2/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("Sprite:hframes")
tracks/3/interp = 1
tracks/3/imported = false
tracks/3/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ 3 ]
}
tracks/4/type = "value"
tracks/4/path = NodePath("Sprite:frame")
tracks/4/interp = 1
tracks/4/imported = false
tracks/4/keys = {
"times": FloatArray( 0, 0.13, 0.26, 0.39, 0.52, 0.65, 0.78, 0.91 ),
"transitions": FloatArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 0, 1, 2, 3, 4, 5, 6, 0 ]
}
tracks/5/type = "value"
tracks/5/path = NodePath("../Particles2D:config/emitting")
tracks/5/interp = 1
tracks/5/imported = false
tracks/5/keys = {
"times": FloatArray( 0 ),
"transitions": FloatArray( 1 ),
"update": 1,
"values": [ false ]
}

[sub_resource type="ColorRamp" id=5]

offsets = FloatArray( 0, 0.162562, 0.541872, 1 )
colors = ColorArray( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0.27218, 1, 1, 1, 0.2 )

[node name="Player" type="Node2D"]

script/script = SubResource( 1 )
terrain_path = NodePath("")
debug_path = null

[node name="KinematicBody2D" type="KinematicBody2D" parent="."]

input/pickable = false
collision/layers = 1
collision/mask = 1
collision/margin = 0.08

[node name="Sprite" type="Sprite" parent="KinematicBody2D"]

transform/pos = Vector2( 6.03516, -179.017 )
texture = ExtResource( 1 )
flip_h = true
vframes = 3
hframes = 3

[node name="AnimationPlayer" type="AnimationPlayer" parent="KinematicBody2D"]

playback/process_mode = 0
playback/default_blend_time = 0.0
root/root = NodePath("..")
anims/stand = SubResource( 2 )
anims/walkL = SubResource( 3 )
anims/walkR = SubResource( 4 )
playback/active = true
playback/speed = 1.0
blend_times = [  ]
autoplay = ""

[node name="Particles2D" type="Particles2D" parent="."]

visibility/opacity = 0.7
transform/pos = Vector2( 9.06059, -299.687 )
config/amount = 560
config/lifetime = 8.0
config/emitting = false
config/process_mode = 1
config/local_space = false
config/texture = ExtResource( 4 )
params/direction = 80.0
params/spread = 12.0
params/linear_velocity = 60.0
params/spin_velocity = 0.0
params/orbit_velocity = 0.0
params/gravity_direction = 0.0
params/gravity_strength = -1.0
params/radial_accel = 0.0
params/tangential_accel = 0.0
params/damping = 1.5
params/initial_angle = 0.0
params/initial_size = 0.6
params/final_size = 7.0
params/hue_variation = 0.0
params/anim_speed_scale = 1.0
params/anim_initial_pos = 0.0
randomness/linear_velocity = 0.2
color/color_ramp = SubResource( 5 )


